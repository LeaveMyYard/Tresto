[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tresto"
dynamic = ["version"]
description = "AI-powered E2E testing CLI inspired by Playwright codegen"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    { name = "LeaveMyYard", email = "your-email@example.com" },
]
keywords = ["testing", "e2e", "ai", "playwright", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Quality Assurance",
]
dependencies = [
    "typer[all]>=0.9.0",
    "playwright>=1.40.0",
    "anthropic>=0.25.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "toml>=0.10.2",
    "jinja2>=3.1.0",
    "pathspec>=0.11.0",
    "langchain>=0.1.0",
    "langchain-anthropic>=0.1.0",
    "langchain-openai>=0.1.0",
    "langchain-core>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/LeaveMyYard/Tresto"
Documentation = "https://github.com/LeaveMyYard/Tresto#readme"
Repository = "https://github.com/LeaveMyYard/Tresto"
"Bug Tracker" = "https://github.com/LeaveMyYard/Tresto/issues"

[project.scripts]
tresto = "tresto.cli:app"

[tool.hatch.version]
path = "src/tresto/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/tresto"]

[tool.ruff]
target-version = "py313"
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by ruff format
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
